# Default values for keda-prophet.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/kedify/keda-prophet
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

settings:
  logs:
    logLvl: info
  storage:
    modelsPvcSize: 500Mi
    dbPvcSize: 500Mi

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8000

resources: 
  limits:
    memory: 300Mi
  requests:
    cpu: 100m
    memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /liveness
    port: http
readinessProbe:
  httpGet:
    path: /readiness
    port: http

# Additional volumes on the output Deployment definition.
volumes: 
  - name: sqlite
    persistentVolumeClaim:
      claimName: prophet-sqlite
  - name: models
    persistentVolumeClaim:
      claimName: prophet-models

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: sqlite
    mountPath: /data
  - name: models
    mountPath: /models

nodeSelector: {}

tolerations: []

affinity: {}

asciiArt: true
